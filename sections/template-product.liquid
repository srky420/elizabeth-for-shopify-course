<!-- SWIPER JS CDN LINKS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

<style>
  .swiper-button-prev,
  .swiper-button-next {
    color: black;
    top: auto !important;
    height: 20px;
  }
  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 20px;
  }
  .swiper-pagination {
    bottom: 0 !important;
  }
  .swiper-pagination-bullet-active {
    background-color: black !important;
  }
  .product--information {
    height: fit-content;
  }
</style>

<div class="max-w-6xl mx-auto my-8">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
    <!-- PRODUCT MEDIA -->
    <div class="product--medias">
      <!-- MD SIZE -->
      <div class="hidden md:block">
        {% for media in product.media %}
          <div class="h-100 overflow-hidden p-2">
            {% render 'product-media'
              , media: media %}
          </div>
        {% endfor %}
      </div>
      <!-- SM SIZE -->
      <div class="md:hidden">
        <div class="swiper h-94">
          <div class="swiper-wrapper">
            {% for media in product.media %}
              <div class="swiper-slide">
                <div class="h-80 overflow-hidden p-2">
                  {% render 'product-media'
                    , media: media %}
                </div>
              </div>
            {% endfor %}
          </div>
          <div class="swiper-pagination"></div>
          <div class="swiper-button-prev"></div>
          <div class="swiper-button-next"></div>
        </div>
      </div>
    </div>

    <!-- PRODUCT INFORMATION AND FORM -->
    <div class="product--information sticky top-5 p-2">
      {% form 'product'
        , product
        , id: 'product_form'
        , novalidate: 'novalidate' %}
        <input
          type="hidden"
          name="id"
          value="{{ selected_variant.id }}">

        {% for block in section.blocks %}
          {% case block.type %}
            {% when "vendor" %}
              <!-- PRODUCT VENDOR -->
              <div class="my-3">
                <span class="text-xs text-gray-500">
                  {{ product.vendor }}
                </span>
              </div>

            {% when "title" %}
              <!-- PRODUCT TITLE -->
              <div class="my-3">
                <h1 class="text-3xl text-gray-900">
                  {{ product.title }}
                </h1>
              </div>

            {% when "price" %}
              <!-- PRODUCT PRICE -->
              <div class="my-3" id="price-{{ section.id }}">
                <span class="text-base text-gray-500 line-through">{{ selected_variant.compare_at_price | money }}</span>
                <span class="text-lg text-gray-900 font-medium">{{ selected_variant.price | money }}</span>
                {% if selected_variant.price < selected_variant.compare_at_price %}
                  <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">Sale</span>
                {% endif %}
              </div>

            {% when "variant_selector" %}
              <!-- PRODUCT VARIANT SELECTORS -->
              <div class="my-3">
                {% unless product.has_only_default_variant %}
                  <variant-selector
                    class=""
                    data-url="{{ product.url }}"
                    data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                      <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

                      <div class="my-2">
                        <select
                          name="options[{{ option.name | escape }}]"
                          id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="w-full border py-3 px-3">
                          {% for value in option.values %}
                            <option
                              value="{{ value | escape }}"
                              {% if option.selected_value == value %}
                              selected="selected"
                              {% endif %}>
                              {{ value }}
                            </option>
                          {% endfor %}
                        </select>
                      </div>

                      <script type="application/json">{{ product.variants | json }}
                      </script>
                    {% endfor %}
                  </variant-selector>
                {% endunless %}
              </div>

            {% when "quantity" %}
              <!-- PRODUCT QUANTITY SELECTOR -->
              <div class="my-3">
                <label for="Quantity-{{ section.id }}">Quantity</label>
                <div class="my-2">
                  <input
                    class="w-full border px-3 py-3"
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    min="1"
                    value="1">
                </div>
              </div>

            {% when "description" %}
              <!-- PRODUCT DESCRIPTION -->
              <div class="my-3">
                <p class="text-gray-700">{{ product.description }}</p>
              </div>

            {% when "checkout_buttons" %}
              <div class="my-3">
                <button
                  type="submit"
                  name="add"
                  class="w-full px-6 py-4 bg-gray-900 text-white hover:bg-gray-700 rounded-sm my-2"
                  {% if product.selected_variant.available == false %}
                  disabled
                  {% endif %}>
                  {% if product.selected_variant.available == false %}
                    Sold Out
                  {% else %}
                    Add To Cart
                  {% endif %}
                </button>
              </div>

          {% endcase %}
        {% endfor %}
      {% endform %}
    </div>
  </div>
</div>


<script>
    const swiper = new Swiper('.swiper', {
    // Optional parameters
    direction: 'horizontal',
    loop: true,
    
    // If we need pagination
    pagination: {
      el: '.swiper-pagination',
    },
    
    // Navigation arrows
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
    
    // And if we need scrollbar
    scrollbar: {
      el: '.swiper-scrollbar',
    },
      });
</script>
<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener("change", this.onVariantChange)
    }
  
    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();
      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
      }
    }
  
    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll("select"), (select) => select.value);
      console.log(this.options);
    }
  
    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      console.log(this.variantData);
      return this.variantData;
    }
  
    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options.map((option, index) => {
          return this.options[index] === option;
        }).includes(false);
  
        if (findings) return variant;
      });
  
      console.log(this.currentVariant);
    }
  
    updateURL() {
      if (this.currentVariant) {
        window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`)
      }
    }
  
    updateFormID() {
      const input = document.querySelector("#product_form").querySelector("input[name='id']");
      input.value = this.currentVariant.id;
    }
  
    updatePrice() {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then((res) => res.text())
        .then((text) => {
          const id = `price-${this.dataset.section}`;
          // Text is the returned HTML from fetch request, so same page with different price
          const html = new DOMParser().parseFromString(text, "text/html");
  
          const oldPrice = document.getElementById(id);
          const newPrice = html.getElementById(id);
  
          if (oldPrice && newPrice) {
            oldPrice.innerHTML = newPrice.innerHTML;
          }
        });
    }
  }
  
  customElements.define("variant-selector", VariantSelector);
</script>

{% schema %}
  {
    "name": "Product",
    "blocks": [
      {
        "type": "vendor",
        "name": "Vendor",
        "limit": 1
      },
      {
        "type": "title",
        "name": "Title",
        "limit": 1
      },
      {
        "type": "price",
        "name": "Price",
        "limit": 1
      },
      {
        "type": "variant_selector",
        "name": "Variant Selector",
        "limit": 1
      }, {
        "type": "quantity",
        "name": "Quantity",
        "limit": 1
      }, {
        "type": "description",
        "name": "Description",
        "limit": 1
      }, {
        "type": "checkout_buttons",
        "name": "Checkout Buttons",
        "limit": 1
      }
    ]
  }
{% endschema %}